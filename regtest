#!/bin/bash

if [ "$1" == "" ]; then
  echo "Please specify 'start', 'stop', 'clean' or other bitcoin-cli command"
  exit 1
fi

DIR="$HOME/.bitcoin-sv-regtest"

# Build is commented out as we are using an official image from dockerhub

# if [ "$1" == "build" ]; then
#   cat <<EOF | docker build --no-cache -t bitcoin-sv -
# ARG PLATFORM=linux/amd64
# FROM --platform=\$PLATFORM ubuntu:20.04

# RUN set -x \
#   &&  apt-get update \
#   && apt-get -y install wget libatomic1 \
#   && rm -rf /var/lib/apt/lists/*

# RUN set -x \
#   && cd /tmp \
#   && wget -qO bitcoin.tar.gz https://download.bitcoinsv.io/bitcoinsv/1.0.16/bitcoin-sv-1.0.16-x86_64-linux-gnu.tar.gz \
#   && tar -xzvf bitcoin.tar.gz -C /usr/local --strip-components=1 --exclude=*-qt \
#   && rm -rf /tmp/*

# RUN set -x \
#   && echo '#!/bin/sh' > /entrypoint.sh \
#   && echo 'shift' >> /entrypoint.sh \
#   && echo 'bitcoind -datadir=/data \$@' >> /entrypoint.sh \
#   && chmod +x /entrypoint.sh

# ENTRYPOINT ["/entrypoint.sh"]
# EOF
#   exit $?
# fi

if [ "$1" == "clean" ]; then
  if docker ps | grep -q bitcoin-sv-regtest; then
    echo "ERROR: bitcoin-sv-regtest container is running, stop before cleaning."
    exit 1
  fi

  # This command removes the Docker container named 'bitcoin-sv-regtest'
  # The '-v' flag ensures that any associated volumes are also removed
  # This is useful for cleaning up resources when you no longer need the container
  docker rm -v bitcoin-sv-regtest > /dev/null 2>&1

  rm -rf $DIR
  exit 0
fi

if [ "$1" == "stop" ]; then
  if ! docker ps | grep -q bitcoin-sv-regtest; then
    echo "ERROR: bitcoin-sv-regtest container is not running."
    exit 1
  fi

  docker exec bitcoin-sv-regtest bitcoin-cli -datadir=/data stop
  exit 0
fi

if [ "$1" == "start" ]; then
  if docker ps | grep -q bitcoin-sv-regtest; then
    echo "ERROR: bitcoin-sv-regtest container is already running."
    exit 1
  fi

  mkdir -p $DIR/regtest

  if [ -L "$0" ]; then 
    SCRIPT_DIR="$(cd "$($(pwd)/$(readlink "$0"))" && pwd)"
  else
    SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
  fi

  if [ -f "$SCRIPT_DIR/regtest_wallet.dat" ] && [ ! -f "$DIR/regtest/wallet.dat" ]; then
    # privkey is "tprv8ZgxMBicQKsPfPCcKvAPAhga6QNeC1xPXhPBhFtw1CvRisZHnCF4LAjDbkcY7CwhndHrvTvmRWWwqRM9XzaAVRxwh81wnPV1kX8gU1XbEhx"  
    echo "Installing regtest_wallet.dat..."
    cp "$SCRIPT_DIR/regtest_wallet.dat" "$DIR/regtest/wallet.dat"
  fi

  if [ ! -f "$DIR/bitcoin.conf" ]; then
    echo "Creating $DIR/bitcoin.conf..."

    cat << EOL > $DIR/bitcoin.conf
port=18333
rpcbind=0.0.0.0
rpcport=18332
rpcuser=bitcoin
rpcpassword=bitcoin
rpcallowip=0.0.0.0/0
dnsseed=0
listenonion=0
listen=1
server=1
rest=1
regtest=1
debug=1
usecashaddr=0
txindex=1
excessiveblocksize=1000000000
maxstackmemoryusageconsensus=100000000
genesisactivationheight=1
zmqpubhashblock=tcp://*:28332
zmqpubhashtx=tcp://*:28332
zmqpubdiscardedfrommempool=tcp://*:28332
zmqpubremovedfrommempoolblock=tcp://*:28332

zmqpubinvalidtx=tcp://*:28332
invalidtxsink=ZMQ
minminingtxfee=0
EOL
  fi

  # IMAGE_NAME=bitcoin-sv # LOCAL BUILD
  IMAGE_NAME=bitcoinsv/bitcoin-sv # OFFICIAL IMAGE

  docker run --platform linux/amd64 \
    -d \
    --rm \
    --name bitcoin-sv-regtest \
    -p 18332:18332 -p 18333:18333 -p 28332:28332 \
    --volume $DIR:/data \
    -e BITCOIN_RPC_USER=bitcoin \
    -e BITCOIN_RPC_PASSWORD=bitcoin \
    $IMAGE_NAME bitcoind -datadir=/data -regtest -debug=1 -standalone

  exit $?

else

  docker exec bitcoin-sv-regtest bitcoin-cli -datadir=/data $@

fi
